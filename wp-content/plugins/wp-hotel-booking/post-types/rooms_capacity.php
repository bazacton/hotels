<?php/** * File Type: Room Post Type */if (!class_exists('rooms_capacity')) {    class rooms_capacity {        // The Constructor        public function __construct() {            add_action('init', array(&$this, 'cs_room_init'));						// Adding columns			add_filter('manage_rooms_capacity_posts_columns', array(&$this, 'cs_rooms_capacity_columns_add'));			add_action('manage_rooms_capacity_posts_custom_column', array(&$this, 'cs_rooms_capacity_columns'),10, 2);        }        // Hook into WP's init action hook        public function cs_room_init() {            // Initialize Post Type            $this->cs_rooms_capacity_register();        }        public function cs_rooms_capacity_register() {            $labels = array(                'name' => __('Rooms Capacity','booking'),                'menu_name' => __('Rooms Capacity', 'booking'),                'add_new_item' => __('Add New Room Capacity','booking'),                'edit_item' => __('Edit Room Capacity','booking'),                'new_item' => __('New Rooms Capacity','booking'),                'add_new' => __('Add New Room Capacity','booking'),                'view_item' => __('View Room Capacity','booking'),                'search_items' => __('Search', 'booking'),                'not_found' => __('Nothing found','booking'),                'not_found_in_trash' => __('Nothing found in Trash','booking'),                'parent_item_colon' => ''            );            $args = array(                'labels' => $labels,                'public' => false,                'publicly_queryable' => true,                'show_ui' => true,                'query_var' => false,                'menu_icon' => 'dashicons-admin-post',				'show_in_menu' => 'edit.php?post_type=rooms',                'rewrite' => true,                'capability_type' => 'post',                'hierarchical' => false,                'menu_position' => null,                'supports' => array('title')            );            register_post_type('rooms_capacity', $args);        }				// Adding columns Title		public function cs_rooms_capacity_columns_add($columns) {			unset($columns['date']);			$columns['room'] 		= 'Room';			$columns['price']		= 'Price';			$columns['adults']		= 'Adults';			$columns['children'] 	= 'Children';  				return $columns;		}				// Adding columns		public function cs_rooms_capacity_columns($name) {			global $post, $gateway;			$cs_checking = $cs_checkout = $cs_total_adults = $cs_total_childs = '';			$cs_room_id 	 =  get_post_meta($post->ID,'cs_room_id',true); 			$cs_room_price 	 = get_post_meta($post->ID,'cs_room_price',true);			$cs_room_max_adults = get_post_meta($post->ID,'cs_room_max_adults',true);			$cs_room_max_child  = get_post_meta($post->ID,'cs_room_max_child',true);						if( $cs_room_price == '' ){				$cs_room_price	= 0;			}			// return payment gateway name						switch ($name) {				case 'room':					echo  get_the_title( $cs_room_id );				break;								case 'price':					echo number_format( $cs_room_price ,2 ); 				break;				case 'adults':					echo absint( $cs_room_max_adults );				break;				case 'children':					echo  absint( $cs_room_max_child );				break;			}		}		    }    // Initialize Object    new rooms_capacity();}